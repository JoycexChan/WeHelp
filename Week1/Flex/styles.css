/* 瀏覽器的預設樣式有margin
 可以在CSS中為 <body> 標籤設定 margin: 0; 來移除這些邊距。*/

    html, body {
        margin: 0;
        padding: 0;
        width: 100%;
    }





/* 文本樣式 */
    /* 共通的文本樣式 */
    .text-bold {
        font-weight: bold;
    }
    
    .text-20px {
        font-size: 20px;
    }
    
    .text-40px {
        font-size: 40px;
    }





/* 導航欄樣式 */
        .navbar {
            display: flex; /* 使用 Flexbox 顯示彈性容器 */
            justify-content: space-between; /* 在容器內的元素間均勻分布空間 */
            background-color: white; /* 背景色為白色 */
            overflow: hidden; /* 隱藏溢出部分 */
            align-items: center;
            position: fixed; /* 定位方式為固定位置 */
            top: 0; /* 與頂部距離為 0 */
            width: 100%; /* 寬度佔據整個屏幕 */
            z-index: 1000; /* 設定層級為最高，使其位於頂部 */
        }

    /* 標題樣式 */
        .navbar-header .logo {
            display: block; /* 顯示為區塊元素 */
            color: rgb(0, 0, 0); /* 文字顏色為黑色 */
            padding: 14px 16px; /* 上下內邊距 14px，左右內邊距 16px */
            text-decoration: none; /* 移除文字下劃線 */
        }

    /* 導航連結樣式 */
        .navbar a {
            color: black; /* 文字顏色為黑色 */
            padding: 14px 16px; /* 上下內邊距 14px，左右內邊距 16px */
            text-decoration: none; /* 移除文字下劃線 */
            text-align: center; /* 文字居中對齊 */
        }

        .navbar a:hover {
            background-color: #ddd; /* 滑鼠懸停時的背景色 */
            color: black; /* 文字顏色變為黑色 */
        }

    /* 漢堡菜單 */
        .burger-menu-icon {
            cursor: pointer;
            display: none;
            width: 50px;
            height: 50px;
            background-image: url('BurgerMenu.png');
            background-size: cover;
        }


    /* 彈出菜單的樣式 */
        .popup-menu {
            display: none; /* 初始設為隱藏 */
            position: fixed;
            top: 0;
            right: 0;
            width: 250px;
            height: 100%;
            background-color: #f9f9f9;
            box-shadow: -2px 0 5px rgba(0,0,0,0.2);
            padding: 15px;
            box-sizing: border-box;
            transition: right 0.3s; /* 平滑過渡效果 */
            z-index: 2000; /* 確保這個值比導航欄的z-index高 */
        }

    /* 顯示彈出菜單的樣式，確保右邊距為0，以全面顯示 */
        .popup-menu.show-menu {
            display: block; /* 顯示菜单 */
            right: 0; /* 重要的是要設置此属性以覆盖之前的定位 */
        }

    /* 關閉按鈕樣式，確保有足夠的 z-index 值 */
        .close-icon {
            cursor: pointer;
            position: absolute;
            top: 10px;
            right: 10px;
            z-index: 3000; /* 設定較高的z-index值 */
            font-size: 24px;
            font-weight: bold;
            color: #000; /* 設定一個明顯的顏色確保可見 */
        }

    /* 菜單項目的樣式 */
        .popup-menu a {
            display: block;
            text-decoration: none;
            color: #333;
            padding: 8px 15px;
            margin: 5px 0;
        }

        .popup-menu a:hover {
            background-color: #ddd;
        }






/* 歡迎文本樣式 */
    .welcome-text {
        display: flex; /* 使用 Flexbox 顯示彈性容器 */
        align-items: center; /* 垂直居中對齊 */
        justify-content: center; /* 水平居中對齊 */
        width: 100%; /* 寬度佔據整個容器 */
        height: 250px; /* 高度為 250px */
        margin-top: 56px; /* 上邊距為 30px */
        background-color: #84bf96; /* 背景色為淺綠色 */
        color: black; /* 文字顏色為黑色 */
    }

/* 繼承規則
 在CSS中，繼承規則是指某些CSS屬性的值可以從父元素傳遞給它的子元素。這意味著如果你在父元素上設定了某個可繼承的屬性，其子元素將自動獲得相同的屬性值，除非你為子元素指定了一個不同的值。

可繼承的屬性
不是所有的CSS屬性都是可繼承的。可繼承的屬性包括color、font-size、font-family、text-align等。這些屬性當設定於父元素時，會被子元素繼承。

不可繼承的屬性
許多CSS屬性是不可繼承的，例如margin、padding、border、width、height等。這些屬性設定於父元素時，不會影響到子元素。子元素不會自動獲得這些屬性值，除非明確地為它們設置。

覆蓋繼承
子元素可以覆蓋從父元素繼承來的屬性值。如果你為子元素指定了一個可繼承屬性的值，那麼這個值將取代從父元素繼承來的值。

繼承關鍵字
在CSS中，inherit關鍵字可以用來明確指定一個屬性應從父元素繼承其值。這可以用來強制一個不可繼承的屬性遵循繼承規則，或者確保一個元素確實繼承其父元素的屬性值。

總的來說，繼承規則使得樣式的設定更加靈活且容易管理，允許你在文檔的不同部分共享樣式設定，而無需重複寫同樣的CSS代碼。*/


/* padding預設為零
padding在CSS中是一個非常重要的屬性，它表示元素內部的空間，即元素內容與其邊框之間的空間。padding的常見用途包括：

增加內部空間：
padding可以增加元素內容周圍的空間，使得內容不會直接貼近元素的邊框，從而改善元素的視覺外觀和可讀性。

改善元素的點擊範圍：
對於交互元素，如按鈕或鏈接，增加padding可以擴大它們的點擊範圍，使得用戶更容易與之互動，尤其是在觸控設備上。

創建布局空間：
padding可以用來調整元素的大小，對於需要特定大小或形狀的布局元素，通過調整padding可以實現這一目的，而不影響元素的邊框和其他外部樣式。

實現對齊和間距：
在布局中，padding常被用來控制元素內部內容的對齊方式，比如使文本在一個區塊內居中或者對齊到一側。

分隔內容：
在包含多個子元素的容器中，增加padding可以有效地在子元素之間創建視覺分隔，幫助區分不同的內容區塊。

美觀和視覺效果：
padding也經常用於美化設計，通過增加內部空間來突出元素的重要性或提高設計的美觀性。

總之，padding是控制元素內部空間的關鍵工具，它在改善元素可用性、提升界面美觀、實現精確布局中發揮著重要作用。 */





/* 主內容盒樣式 */
    /* 基本样式 */
        .main-content {
            margin: 0 auto; /* 水平居中 */
            background-color: #ffffff; /* 背景颜色 */
            box-sizing: border-box; /* 边框和内边距包含在宽度内 */
            margin-top: 30px; /* 上邊距為 30px */
            display: flex;
            flex-wrap: wrap;
            justify-content: space-between; /* 內容間距均勻分布 */
            align-items: stretch; /* 這裡確保所有 A-box 的高度相同 */
            width: 100%; /* 設定為佔滿主內容盒的寬度 */
        }

 /* margin: 0 auto
  0：這個值設定了元素的上邊距和下邊距為0。這樣，元素上下不會有額外的空間。

auto：這個值設定了元素的左右邊距自動調整。當邊距設為auto時，瀏覽器會自動計算左右邊距的值，使得元素在其包含塊（通常是父元素）中水平居中。

為了使margin: 0 auto;能正常工作來達到水平居中的效果，元素需要有明確的寬度設定，否則它會自然地擴展以填滿其父元素的寬度，使得auto計算的邊距為0。此外，元素的父容器必須有足夠的寬度，以容納元素和它的外邊距。

這種居中技巧主要用於塊級元素，如<div>、<section>等，對於內聯元素，這種方法則不適用。*/   



    /* A-box */
        .A-box {
            display: flex; /* 使用彈性盒子布局 */
            justify-content: space-between; /* 內容間距均勻分布 */
            flex-wrap: wrap; /* 允許換行 */
            margin-bottom: 20px; /* 與下方元素的間距 */
            box-sizing: border-box; /* 確保寬度包括內邊距和邊框 */
        }

        /* 小盒子內的圖片盒子樣式 */
        .A1-img-box {
            justify-content: center; /* 水平居中對齊內容 */
            align-items: center; /* 垂直居中對齊內容 */
            overflow: hidden; /* 超出部分隱藏 */
        }

        .A1-img-box img {
            max-width: 100%; /* 最大寬度為盒子的100%，確保圖片不會超過盒子寬度 */
            height: auto; /* 高度自動，以保持圖片原有的寬高比 */
        }

        .A1-text-box {
            /* 文本盒樣式 */
            flex-grow: 1; /* 佔用剩餘空間 */
            display: flex; /* 使用 Flexbox 布局 */
            justify-content: flex-start; /* 水平靠左對齊內容 */
            align-items: center; /* 垂直居中對齊內容 */
            padding: 0 10px; /* 內邊距 */
            background-color: #84bf96; /* 背景色為淺綠色 */
            overflow: hidden; /* 隱藏溢出部分 */   
        }

    /* B-box */
        .B-box {
            display: flex; /* 設置為彈性盒子布局 */
            flex-wrap: wrap; /* 允許內容換行 */
            justify-content: space-between; /* 內容間距均勻分布 */
            margin-bottom: 20px; /* 與下方元素的間距為20px */
            align-items: center; /* 子元素在交叉軸上居中對齊 */
            box-sizing: border-box; /* 盒子尺寸的計算方式包含邊框和內邊距 */
            position: relative; /* 相對定位，對於內部絕對定位元素定位基準 */
        }

        /* 小盒子內的圖片盒子樣式 */
        .B1-img-box {
            background-image: url('image.jpg');
            background-size: cover; /* 背景圖片覆蓋整個元素，保持其長寬比 */
            background-position: center; /* 背景圖片居中顯示 */
            background-repeat: no-repeat; /* 不重複背景圖片 */
            width: 100%;  /* 使圖片寬度充滿容器 */
            height: 100%; /* 使圖片高度充滿容器 */
            min-height: 200px
        }

        .B1-img-box img {
            width: 100%;  /* 使圖片寬度充滿容器 */
            height: 100%; /* 使圖片高度充滿容器 */
            object-fit: cover; /* 保持圖片的寬高比，多餘部分裁剪 */
        }


        /* 文字盒樣式 */
        .B1-text-box {
            position: absolute; /* 絕對定位 */
            bottom: 0; /* 底部對齊父元素 */
            left: 0; /* 左側對齊父元素 */
            width: 100%; /* 寬度充滿父元素 */
            background-color: rgba(0, 0, 0, 0.5); /* 設置半透明的黑色背景 */
            color: white; /* 文字顏色設為白色 */
            text-align: center; /* 文字水平居中對齊 */
            line-height: 30px; /* 設置行高為30px */
        }
        /* 星形符號盒樣式 */
        .B1-star-box {
            position: absolute; /* 絕對定位 */
            top: 10px; /* 距頂部1%視窗寬度 */
            right: 10px; /* 距右側1%視窗寬度 */
            width: 35px; /* 寬度為3%視窗寬度 */
            height: 35px; /* 高度為3%視窗寬度 */
        }

        .B1-star-box img {
            max-width: 100%; /* 圖片最大寬度不超過盒子寬度 */
            height: auto; /* 圖片高度自動調整，保持原始寬高比 */
        }

        .star-icon {
            cursor: pointer; /* 滑鼠懸停時顯示指針形狀 */
            display: inline-block; /* 內聯塊顯示 */
            width: 35px; /* 寬度為3%視窗寬度 */
            height: 35px; /* 高度為3%視窗寬度 */
            background-color: rgba(255, 215, 0, 0.9); /* 設置金色背景，透明度為90% */
            clip-path: polygon(50% 0%, 61% 35%, 98% 35%, 68% 57%, 79% 91%, 50% 70%, 21% 91%, 32% 57%, 2% 35%, 39% 35%); /* 設置星形剪裁路徑 */
            position: absolute; /* 絕對定位 */
            top: 10px; /* 距頂部1%視窗寬度 */
            right: 10px; /* 距右側1%視窗寬度 */
        }

        .star-icon.empty {
            background-color: rgba(128, 128, 128, 0.6); /* 設置半透明的灰色背景 */
        } 







        


    /* 媒體響應 */

    /* 屏幕宽度在1200px到1920px之间 */
    @media (min-width: 1200px) and (max-width: 1920px) {
        .main-content {
            width: 1200px; /* 固定宽度为1200px */
        }
        
    /* A-box */
        .A-box {
            height: 100%; /* 高度為 50px */
            justify-content: flex-start; /* 使元素靠左排列 */
            width: calc((100% - 20px*2) / 3); /* 減去兩個間隙後，分三等分 */
            align-items: center; /* 垂直居中對齊內容 */
            margin-right: 20px; /* 右邊距為 20px */
        }

        /* 修正最後一個盒子的邊距 */
        .A-box:nth-of-type(3) {
            margin-right: 0; /* 移除特定父元素中最后一个A-box的右边距 */
        }

        /* 小盒子內的圖片盒子樣式 */
        .A1-img-box {
            width: 80px; /* 固定寬度為 80px */
            height: 100%; /* 固定高度為 50px */
            display: flex; /* 使用 Flexbox 布局 */

        }

        .A1-text-box {
            /* 文本盒樣式 */
            height: 80px; /* 固定高度為 50px */
            width: 0; /* 初始寬度設為0 */
        }

    /* B-box */
        .B-box {
            margin-right: 20px; /* 右邊間距為20px */
        }

        /* 第五個盒子的右邊距設為0 */
        .B-box:nth-child(8) {
            margin-right: 0;
        }

        /* 第十個盒子的右邊距設為0 */
        .B-box:nth-child(13) {
            margin-right: 0;
        }

        /* 第一列（第一個盒子和第六個盒子） */
        .B-box:nth-child(4),
        .B-box:nth-child(9) {
            width: calc((100% - 20px*2) / 3);
        }

        /* 第二到第五列 */
        /* 排除第一個和第六個盒子以外的所有盒子 */
        .B-box:not(:nth-child(4)):not(:nth-child(9)) {
            /* 您的其他樣式設置 */
            width: calc((100% - 20px*2) / 6 - 20px / 2);
        }
    }




        
  
    /* 屏幕宽度在600px到1200px之间 */
    @media (min-width: 600px) and (max-width: 1200px) {
        .main-content {
            width: 90%; /* 宽度为屏幕宽度的90% */
        }

    /* A 盒樣式 */
        .A-box {
            width: calc((100% - 20px) / 2); /* 減去1個間隙後，分2等分 */
            height: 50px; /* 高度為 50px */
            justify-content: space-between; /* 元素間平均分布 */
            float: left; /* 向左浮動 */
            align-items: center; /* 垂直居中對齊內容 */
            margin-left: 0; /* 左邊距0 */
            margin-right: 20px; /* 右邊距20px */
        }

        /* 选择第二个A-box元素并修正其右边距 */
        .A-box:nth-of-type(2) {
            margin-right: 0;
        }

        /* 特别针对第三个A-box的样式 */
        .A-box:nth-of-type(3) {
            width: 100%; /* 第三个A-box占满整行 */
            margin-right: 0;
        }

        /* 小盒子內的圖片盒子樣式 */
        .A1-img-box {
            width: 80px; /* 固定寬度為 80px */
            height: 50px; /* 固定高度為 50px */
            display: flex; /* 使用 Flexbox 布局 */
        }

        .A1-text-box {
            /* 文本盒樣式 */
            height: 50px; /* 固定高度為 50px */
            width: 0; /* 初始寬度設為0 */
        }

    /* B 盒樣式 */
        .B-box {
            margin-right: 20px; /* 右邊間距為20px */
        }

        /* 第五個盒子的右邊距設為0 */
        .B-box:nth-child(7) {
            margin-right: 0;
        }

        /* 第八個盒子的右邊距設為0 */
        .B-box:nth-child(11) {
            margin-right: 0;
        }

        /* 第十個盒子的右邊距設為0 */
        .B-box:nth-child(13) {
            margin-right: 0;
        }

        /* 排除底的第9個盒子和第10個盒子 */
        .B-box:not(:nth-child(12)):not(:nth-child(13)) {
            width: calc((100% - 20px) / 4 - 20px / 2);
        }
        /* 置底的第9個盒子和第10個盒子 */
        .B-box:nth-child(12),
        .B-box:nth-child(13) {
            width: calc((100% - 20px) / 2);
        }

    }

    /* 屏幕宽度在360px到600px之间 */
    @media (min-width: 360px) and (max-width: 600px) {
        .main-content {
            width: 90%; /* 宽度为屏幕宽度的90% */
        }
        .welcome-text {
            font-size: 30px;
        }

        .navbar-menu {
            display: none;
        }

        .burger-menu-icon {
            display: block;
        }

        .A-box {
            justify-content: flex-start; /* 使内容靠左对齐 */
            align-items: center; /* 垂直居中对齐 */
            width: 100%; /* 盒子占据全宽 */
            height: 50px; /* 高度為 50px */
            flex-direction: row; /* 使盒子水平堆叠 */
            align-items: center; /* 垂直居中對齊內容 */
            margin-left: 0; /* 左邊距0 */
            margin-right: 0; /* 右邊距0 */
        }

        /* 小盒子內的圖片盒子樣式 */
        .A1-img-box {
            width: 80px; /* 固定寬度為 80px */
            height: 50px; /* 固定高度為 50px */
            display: inline-flex;
            /* 它將元素設置為內聯Flex容器（inline-flex container）。這意味著該元素將會保持其內聯（inline）的性質，同時內部的子元素會採用Flexbox布局。
            內聯布局特性：使用 display: inline-flex; 的元素會在文本流中作為內聯元素顯示，意味著它可以與其他內聯元素（如 span、a 等）在同一行中顯示，而不會強制換行。
            Flexbox布局能力：儘管元素本身作為一個內聯元素顯示，其內部子元素則會按照Flexbox模型進行排列。這允許在一個內聯元素內部使用Flexbox的強大布局功能，如使用 justify-content、align-items、flex-direction 等Flexbox特有的屬性。
            大小自適應：作為一個內聯元素，使用 display: inline-flex; 的容器大小會根據內部內容自適應調整，不會佔據整行的空間，除非內容本身足夠大。 */
        }

        .A1-text-box {
            /* 文本盒樣式 */
            height: 50px; /* 固定高度為 50px */
            white-space: nowrap; /* 文本在一行显示，避免换行 */
            text-overflow: ellipsis; /* 文本溢出时显示省略号 */
        }

    /* B 盒樣式 */  
        .B-box {
            width: 100%; /* 盒子占据全宽 */
        }


    }
    




